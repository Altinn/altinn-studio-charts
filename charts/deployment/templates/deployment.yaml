apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "deploymentname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        release: {{ .Release.Name }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.linkerd.enabled }}
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-cpu-request: 100m
        config.linkerd.io/proxy-memory-limit: 250Mi
        config.linkerd.io/proxy-memory-request: 20Mi
        {{- end }}
    spec:
    {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range $secret := .Values.image.pullSecrets }}
        - name : {{ $secret.name }}
      {{- end }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ required "A valid image.repository value is required!" .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if .Values.image.environment}}
          {{- range $environment := .Values.image.environment}}
            - name: {{ $environment.name }}
              value: {{ quote $environment.value }}
          {{- end }}
          {{- end }}
            - name: ALTINN_KEYS_DIRECTORY
              value: "/mnt/keys"
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            {{- if .Values.resources.limits }}
            limits:
              {{- if .Values.resources.limits.cpu }}
              cpu: {{ .Values.resources.limits.cpu }}
              {{- end }}
              {{- if .Values.resources.limits.memory }}
              memory: {{ .Values.resources.limits.memory }}
              {{- end }}
            {{- end }}
          securityContext:
            runAsUser: 1000
            runAsGroup: 3000
            allowPrivilegeEscalation: false
          {{- if .Values.volumeMounts}}
          volumeMounts:
            {{- range $mount := .Values.volumeMounts}}
            - name: {{ $mount.name }}
              mountPath: {{ $mount.mountPath }}
            {{- end }}
          {{- end }}
      volumes:
        {{- range $volume := .Values.volumes }}
          - name: {{ $volume.name }}
            {{- if $volume.persistentVolumeClaim }}
            persistentVolumeClaim:
              claimName: {{ $volume.persistentVolumeClaim.claimName }}
            {{- end }}
            {{- if $volume.secret }}
            secret:
              secretName: {{ $volume.secret.secretName }}
            {{- end }}
        {{- end }}
